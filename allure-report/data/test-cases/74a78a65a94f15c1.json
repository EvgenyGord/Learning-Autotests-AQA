{"uid":"74a78a65a94f15c1","name":"Проверка создания пользователя","fullName":"tests.test_ui.test_first#test_positive_registration_with_fixture_params","historyId":"56a131b505deecd572da5676d449fa86","time":{"start":1760647340550,"stop":1760647340550,"duration":0},"description":"\nЭтот тест проверяет:\n- Регистрацию пользователя с позитивным сценарием\n- Прохождение регистрации на данных параметров фикстуры registration_data_with_params (хранится в test_ui/conftest.py)\n- Проверка успеха прохождения регистрации \nИЛИ\n- Проверка предупреждения, что пользователь уже создан с таким email\n","descriptionHtml":"<p>Этот тест проверяет:</p>\n<ul>\n<li>Регистрацию пользователя с позитивным сценарием</li>\n<li>Прохождение регистрации на данных параметров фикстуры registration_data_with_params (хранится в test_ui/conftest.py)</li>\n<li>Проверка успеха прохождения регистрации<br />\nИЛИ</li>\n<li>Проверка предупреждения, что пользователь уже создан с таким email</li>\n</ul>\n","status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#sessionnotcreatedexception\nStacktrace:\n#0 0x5564b585767a <unknown>\n#1 0x5564b52d6566 <unknown>\n#2 0x5564b5311b4c <unknown>\n#3 0x5564b530d7c4 <unknown>\n#4 0x5564b535cbd3 <unknown>\n#5 0x5564b535c286 <unknown>\n#6 0x5564b534e403 <unknown>\n#7 0x5564b531ab02 <unknown>\n#8 0x5564b531b7c1 <unknown>\n#9 0x5564b581b448 <unknown>\n#10 0x5564b581f2af <unknown>\n#11 0x5564b58028d9 <unknown>\n#12 0x5564b581fe55 <unknown>\n#13 0x5564b57e813f <unknown>\n#14 0x5564b58444b8 <unknown>\n#15 0x5564b5844693 <unknown>\n#16 0x5564b5856613 <unknown>\n#17 0x7f7b3a1c2b7b <unknown>","statusTrace":"@pytest.fixture\n    def browser():\n>       driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()))\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/test_ui/conftest.py:11: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py:46: in __init__\n    super().__init__(\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py:71: in __init__\n    super().__init__(command_executor=executor, options=options)\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:263: in __init__\n    self.start_session(capabilities)\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:366: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:458: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3e8416bc80>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: probably user data d...\\\\n#15 0x5564b5844693 \\\\u003Cunknown>\\\\n#16 0x5564b5856613 \\\\u003Cunknown>\\\\n#17 0x7f7b3a1c2b7b \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\") if isinstance(message, dict) else None\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#sessionnotcreatedexception\nE       Stacktrace:\nE       #0 0x5564b585767a <unknown>\nE       #1 0x5564b52d6566 <unknown>\nE       #2 0x5564b5311b4c <unknown>\nE       #3 0x5564b530d7c4 <unknown>\nE       #4 0x5564b535cbd3 <unknown>\nE       #5 0x5564b535c286 <unknown>\nE       #6 0x5564b534e403 <unknown>\nE       #7 0x5564b531ab02 <unknown>\nE       #8 0x5564b531b7c1 <unknown>\nE       #9 0x5564b581b448 <unknown>\nE       #10 0x5564b581f2af <unknown>\nE       #11 0x5564b58028d9 <unknown>\nE       #12 0x5564b581fe55 <unknown>\nE       #13 0x5564b57e813f <unknown>\nE       #14 0x5564b58444b8 <unknown>\nE       #15 0x5564b5844693 <unknown>\nE       #16 0x5564b5856613 <unknown>\nE       #17 0x7f7b3a1c2b7b <unknown>\n\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: SessionNotCreatedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1760647101782,"stop":1760647101861,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"browser","time":{"start":1760647340551,"stop":1760647341379,"duration":828},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#sessionnotcreatedexception\nStacktrace:\n#0 0x5564b585767a <unknown>\n#1 0x5564b52d6566 <unknown>\n#2 0x5564b5311b4c <unknown>\n#3 0x5564b530d7c4 <unknown>\n#4 0x5564b535cbd3 <unknown>\n#5 0x5564b535c286 <unknown>\n#6 0x5564b534e403 <unknown>\n#7 0x5564b531ab02 <unknown>\n#8 0x5564b531b7c1 <unknown>\n#9 0x5564b581b448 <unknown>\n#10 0x5564b581f2af <unknown>\n#11 0x5564b58028d9 <unknown>\n#12 0x5564b581fe55 <unknown>\n#13 0x5564b57e813f <unknown>\n#14 0x5564b58444b8 <unknown>\n#15 0x5564b5844693 <unknown>\n#16 0x5564b5856613 <unknown>\n#17 0x7f7b3a1c2b7b <unknown>\n\n","statusTrace":"  File \"/usr/local/lib/python3.12/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n  File \"/usr/local/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/pluggy/_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1196, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/_pytest/fixtures.py\", line 923, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/app/tests/test_ui/conftest.py\", line 11, in browser\n    driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()))\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py\", line 46, in __init__\n    super().__init__(\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py\", line 71, in __init__\n    super().__init__(command_executor=executor, options=options)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 263, in __init__\n    self.start_session(capabilities)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 366, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 458, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":0}],"testStage":{"description":"\nЭтот тест проверяет:\n- Регистрацию пользователя с позитивным сценарием\n- Прохождение регистрации на данных параметров фикстуры registration_data_with_params (хранится в test_ui/conftest.py)\n- Проверка успеха прохождения регистрации \nИЛИ\n- Проверка предупреждения, что пользователь уже создан с таким email\n","status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#sessionnotcreatedexception\nStacktrace:\n#0 0x5564b585767a <unknown>\n#1 0x5564b52d6566 <unknown>\n#2 0x5564b5311b4c <unknown>\n#3 0x5564b530d7c4 <unknown>\n#4 0x5564b535cbd3 <unknown>\n#5 0x5564b535c286 <unknown>\n#6 0x5564b534e403 <unknown>\n#7 0x5564b531ab02 <unknown>\n#8 0x5564b531b7c1 <unknown>\n#9 0x5564b581b448 <unknown>\n#10 0x5564b581f2af <unknown>\n#11 0x5564b58028d9 <unknown>\n#12 0x5564b581fe55 <unknown>\n#13 0x5564b57e813f <unknown>\n#14 0x5564b58444b8 <unknown>\n#15 0x5564b5844693 <unknown>\n#16 0x5564b5856613 <unknown>\n#17 0x7f7b3a1c2b7b <unknown>","statusTrace":"@pytest.fixture\n    def browser():\n>       driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()))\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/test_ui/conftest.py:11: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py:46: in __init__\n    super().__init__(\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py:71: in __init__\n    super().__init__(command_executor=executor, options=options)\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:263: in __init__\n    self.start_session(capabilities)\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:366: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:458: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3e8416bc80>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: probably user data d...\\\\n#15 0x5564b5844693 \\\\u003Cunknown>\\\\n#16 0x5564b5856613 \\\\u003Cunknown>\\\\n#17 0x7f7b3a1c2b7b \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\") if isinstance(message, dict) else None\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#sessionnotcreatedexception\nE       Stacktrace:\nE       #0 0x5564b585767a <unknown>\nE       #1 0x5564b52d6566 <unknown>\nE       #2 0x5564b5311b4c <unknown>\nE       #3 0x5564b530d7c4 <unknown>\nE       #4 0x5564b535cbd3 <unknown>\nE       #5 0x5564b535c286 <unknown>\nE       #6 0x5564b534e403 <unknown>\nE       #7 0x5564b531ab02 <unknown>\nE       #8 0x5564b531b7c1 <unknown>\nE       #9 0x5564b581b448 <unknown>\nE       #10 0x5564b581f2af <unknown>\nE       #11 0x5564b58028d9 <unknown>\nE       #12 0x5564b581fe55 <unknown>\nE       #13 0x5564b57e813f <unknown>\nE       #14 0x5564b58444b8 <unknown>\nE       #15 0x5564b5844693 <unknown>\nE       #16 0x5564b5856613 <unknown>\nE       #17 0x7f7b3a1c2b7b <unknown>\n\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: SessionNotCreatedException","steps":[],"attachments":[{"uid":"7931976e67f79ff1","name":"stdout","source":"7931976e67f79ff1.txt","type":"text/plain","size":137}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":1},"afterStages":[],"labels":[{"name":"epic","value":"Аутентификация и авторизация"},{"name":"severity","value":"critical"},{"name":"suite","value":"Смоук тесты"},{"name":"as_id","value":"TEST-123"},{"name":"tag","value":"smoke"},{"name":"feature","value":"Регистрация пользователей"},{"name":"tag","value":"ui"},{"name":"owner","value":"QA - evgeny_gord"},{"name":"parentSuite","value":"tests.test_ui"},{"name":"host","value":"c72d5607345a"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_ui.test_first"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"registration_data_with_params","value":"{'email': 'test4@mail.ru', 'name': 'User27', 'password': 'qwertyu3'}"}],"links":[{"name":"https://testcase.com/TC-789","url":"TC-789","type":"tms"},{"name":"https://bugtracker.com/BUG-456","url":"BUG-456","type":"issue"},{"name":"JIRA Task","url":"https://jira.example.com/TEST-123","type":"link"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["ui","smoke"]},"source":"74a78a65a94f15c1.json","parameterValues":["{'email': 'test4@mail.ru', 'name': 'User27', 'password': 'qwertyu3'}"]}