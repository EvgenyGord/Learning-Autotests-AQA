{"name": "Проверка создания пользователя", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=141.0.7390.107)\nStacktrace:\n#0 0x56307d14a67a <unknown>\n#1 0x56307cbc9566 <unknown>\n#2 0x56307cbc0470 <unknown>\n#3 0x56307cbb1926 <unknown>\n#4 0x56307cbb372b <unknown>\n#5 0x56307cbb1eb1 <unknown>\n#6 0x56307cbb1650 <unknown>\n#7 0x56307cbb1302 <unknown>\n#8 0x56307cbaf142 <unknown>\n#9 0x56307cbaf92a <unknown>\n#10 0x56307cbcca99 <unknown>\n#11 0x56307cc67ee5 <unknown>\n#12 0x56307cc41632 <unknown>\n#13 0x56307cc67328 <unknown>\n#14 0x56307cc41403 <unknown>\n#15 0x56307cc0db02 <unknown>\n#16 0x56307cc0e7c1 <unknown>\n#17 0x56307d10e448 <unknown>\n#18 0x56307d1122af <unknown>\n#19 0x56307d0f58d9 <unknown>\n#20 0x56307d112e55 <unknown>\n#21 0x56307d0db13f <unknown>\n#22 0x56307d1374b8 <unknown>\n#23 0x56307d137693 <unknown>\n#24 0x56307d149613 <unknown>\n#25 0x7fc8ea2f0b7b <unknown>", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"dce4eed50fe1879947fa9a4b51019297\")>\nbase_url = 'http://31.59.174.108'\nwait = <selenium.webdriver.support.wait.WebDriverWait (session=\"dce4eed50fe1879947fa9a4b51019297\")>\nregistration_data_with_params = {'email': 'test2@mail.ru', 'name': 'User25', 'password': 'qwertyu1'}\n\n    @allure.epic(\"Аутентификация и авторизация\")\n    @allure.feature(\"Регистрация пользователей\")\n    @allure.suite(\"Смоук тесты\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.tag(\"smoke\", \"ui\")\n    @allure.label(\"owner\", \"QA - evgeny_gord\")\n    @allure.id(\"TEST-123\")\n    @allure.title(\"Проверка создания пользователя\")\n    @allure.description(\"\"\"\n    Этот тест проверяет:\n    - Регистрацию пользователя с позитивным сценарием\n    - Прохождение регистрации на данных параметров фикстуры registration_data_with_params (хранится в test_ui/conftest.py)\n    - Проверка успеха прохождения регистрации\n    ИЛИ\n    - Проверка предупреждения, что пользователь уже создан с таким email\n    \"\"\")\n    @allure.link(\"https://jira.example.com/TEST-123\", name=\"JIRA Task\")\n    @allure.issue(\"BUG-456\", \"https://bugtracker.com/BUG-456\")\n    @allure.testcase(\"TC-789\", \"https://testcase.com/TC-789\")\n    def test_positive_registration_with_fixture_params(browser, base_url, wait, registration_data_with_params):\n        #driver = webdriver.Chrome(service=Service(executable_path='C:/chromedriver.exe'))\n        # driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()))\n        # driver.get(url)\n        with allure.step('Переход на страницу Регистрации'):\n>           browser.get(f\"{base_url}/sign_up\")\n\ntests/test_ui/test_first.py:177: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:483: in get\n    self.execute(Command.GET, {\"url\": url})\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:458: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fcc154d6810>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_REFUSED\\\\n  ...\\\\n#23 0x56307d137693 \\\\u003Cunknown>\\\\n#24 0x56307d149613 \\\\u003Cunknown>\\\\n#25 0x7fc8ea2f0b7b \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\") if isinstance(message, dict) else None\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\nE         (Session info: chrome=141.0.7390.107)\nE       Stacktrace:\nE       #0 0x56307d14a67a <unknown>\nE       #1 0x56307cbc9566 <unknown>\nE       #2 0x56307cbc0470 <unknown>\nE       #3 0x56307cbb1926 <unknown>\nE       #4 0x56307cbb372b <unknown>\nE       #5 0x56307cbb1eb1 <unknown>\nE       #6 0x56307cbb1650 <unknown>\nE       #7 0x56307cbb1302 <unknown>\nE       #8 0x56307cbaf142 <unknown>\nE       #9 0x56307cbaf92a <unknown>\nE       #10 0x56307cbcca99 <unknown>\nE       #11 0x56307cc67ee5 <unknown>\nE       #12 0x56307cc41632 <unknown>\nE       #13 0x56307cc67328 <unknown>\nE       #14 0x56307cc41403 <unknown>\nE       #15 0x56307cc0db02 <unknown>\nE       #16 0x56307cc0e7c1 <unknown>\nE       #17 0x56307d10e448 <unknown>\nE       #18 0x56307d1122af <unknown>\nE       #19 0x56307d0f58d9 <unknown>\nE       #20 0x56307d112e55 <unknown>\nE       #21 0x56307d0db13f <unknown>\nE       #22 0x56307d1374b8 <unknown>\nE       #23 0x56307d137693 <unknown>\nE       #24 0x56307d149613 <unknown>\nE       #25 0x7fc8ea2f0b7b <unknown>\n\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: WebDriverException"}, "description": "\nЭтот тест проверяет:\n- Регистрацию пользователя с позитивным сценарием\n- Прохождение регистрации на данных параметров фикстуры registration_data_with_params (хранится в test_ui/conftest.py)\n- Проверка успеха прохождения регистрации \nИЛИ\n- Проверка предупреждения, что пользователь уже создан с таким email\n", "steps": [{"name": "Переход на страницу Регистрации", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=141.0.7390.107)\nStacktrace:\n#0 0x56307d14a67a <unknown>\n#1 0x56307cbc9566 <unknown>\n#2 0x56307cbc0470 <unknown>\n#3 0x56307cbb1926 <unknown>\n#4 0x56307cbb372b <unknown>\n#5 0x56307cbb1eb1 <unknown>\n#6 0x56307cbb1650 <unknown>\n#7 0x56307cbb1302 <unknown>\n#8 0x56307cbaf142 <unknown>\n#9 0x56307cbaf92a <unknown>\n#10 0x56307cbcca99 <unknown>\n#11 0x56307cc67ee5 <unknown>\n#12 0x56307cc41632 <unknown>\n#13 0x56307cc67328 <unknown>\n#14 0x56307cc41403 <unknown>\n#15 0x56307cc0db02 <unknown>\n#16 0x56307cc0e7c1 <unknown>\n#17 0x56307d10e448 <unknown>\n#18 0x56307d1122af <unknown>\n#19 0x56307d0f58d9 <unknown>\n#20 0x56307d112e55 <unknown>\n#21 0x56307d0db13f <unknown>\n#22 0x56307d1374b8 <unknown>\n#23 0x56307d137693 <unknown>\n#24 0x56307d149613 <unknown>\n#25 0x7fc8ea2f0b7b <unknown>\n\n", "trace": "  File \"/app/tests/test_ui/test_first.py\", line 177, in test_positive_registration_with_fixture_params\n    browser.get(f\"{base_url}/sign_up\")\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 483, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 458, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1760783564948, "stop": 1760783567751}], "attachments": [{"name": "stdout", "source": "a907a7fc-f9b8-42c5-bbba-996339b4b685-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "registration_data_with_params", "value": "{'email': 'test2@mail.ru', 'name': 'User25', 'password': 'qwertyu1'}"}], "start": 1760783564948, "stop": 1760783567763, "uuid": "3338595c-c655-400e-b2ea-86dc6f046a51", "historyId": "6852ce31fe0093ceef77af096d9d7767", "testCaseId": "5a8cabc7c8bb112271ed7c9e913140fc", "fullName": "tests.test_ui.test_first#test_positive_registration_with_fixture_params", "labels": [{"name": "tag", "value": "ui"}, {"name": "feature", "value": "Регистрация пользователей"}, {"name": "owner", "value": "QA - evgeny_gord"}, {"name": "suite", "value": "Смоук тесты"}, {"name": "epic", "value": "Аутентификация и авторизация"}, {"name": "severity", "value": "critical"}, {"name": "tag", "value": "smoke"}, {"name": "as_id", "value": "TEST-123"}, {"name": "parentSuite", "value": "tests.test_ui"}, {"name": "host", "value": "2651023d3966"}, {"name": "thread", "value": "1-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_ui.test_first"}], "links": [{"type": "tms", "url": "TC-789", "name": "https://testcase.com/TC-789"}, {"type": "issue", "url": "BUG-456", "name": "https://bugtracker.com/BUG-456"}, {"type": "link", "url": "https://jira.example.com/TEST-123", "name": "JIRA Task"}], "titlePath": ["tests", "test_ui", "test_first.py"]}